name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: win
            arch: x64
          - os: macos-latest
            platform: mac
            arch: x64
          - os: macos-latest
            platform: mac
            arch: arm64
          - os: ubuntu-latest
            platform: linux
            arch: x64

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      # Linux dependencies
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            webkit2gtk-4.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libnotify-dev \
            libgconf-2-4 \
            libnss3 \
            libxss1 \
            libasound2

      # macOS dependencies and setup
      - name: Setup macOS
        if: matrix.os == 'macos-latest'
        run: |
          sudo xcode-select --install || true
          sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer

      # Install dependencies and rebuild native modules
      - name: Install dependencies
        run: |
          npm ci
          npm run rebuild

      # Build the app
      - name: Build Electron App
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required for electron-builder
          ELECTRON_BUILDER_ARCH: ${{ matrix.arch }}
        run: |
          npm run build -- --${{ matrix.platform }} --${{ matrix.arch }}

      # Upload artifacts with specific naming
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            dist/*.exe
            dist/*.msi
            dist/*.dmg
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
          if-no-files-found: ignore

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Prepare Release Notes
        id: prep_release
        run: |
          echo "Creating release notes for ${{ github.ref_name }}"
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "Release ${{ github.ref_name }}" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "## Downloads" >> $GITHUB_ENV
          echo "### Windows" >> $GITHUB_ENV
          echo "- Windows x64 Installer (.exe)" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "### macOS" >> $GITHUB_ENV
          echo "- macOS Intel/x64 (.dmg)" >> $GITHUB_ENV
          echo "- macOS Apple Silicon/ARM64 (.dmg)" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "### Linux" >> $GITHUB_ENV
          echo "- Linux x64 (.AppImage)" >> $GITHUB_ENV
          echo "- Linux x64 (.deb)" >> $GITHUB_ENV
          echo "- Linux x64 (.rpm)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: artifacts/**/*
          name: Release ${{ github.ref_name }}
          body: ${{ env.RELEASE_BODY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
